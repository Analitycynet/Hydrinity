From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JellySquid <jellysquid+atwork@protonmail.com>
Date: Thu, 8 Oct 2020 20:59:39 -0700
Subject: [PATCH] Lithium reduce allocations

This patch reduces object allocations in several places.

Parts of this patch were created for the Lithium project <https://github.com/jellysquid3/lithium-fabric> by JellySquid <jellysquid+atwork@protonmail.com> and 2No2Name <https://github.com/2No2Name> under the GNU LGPLv3 license.
Portions of this patch that were sourced from Lithium were remapped from Yarn mappings by Mykyta Komarnytskyy <nkomarn@hotmail.com>.

Co-authored-by: Mykyta Komarnytskyy <nkomarn@hotmail.com>

diff --git a/src/main/java/net/minecraft/server/BlockComposter.java b/src/main/java/net/minecraft/server/BlockComposter.java
index ccb61d656b57f02efaeb60df4a70169aef302eed..e851e006c54fc730334296d84cf225f508af2df6 100644
--- a/src/main/java/net/minecraft/server/BlockComposter.java
+++ b/src/main/java/net/minecraft/server/BlockComposter.java
@@ -304,7 +304,7 @@ public class BlockComposter extends Block implements IInventoryHolder {
 
         @Override
         public int[] getSlotsForFace(EnumDirection enumdirection) {
-            return enumdirection == EnumDirection.UP ? new int[]{0} : new int[0];
+            return enumdirection == EnumDirection.UP ? xyz.nkomarn.hydrinity.util.Constants.ZERO_ARRAY : xyz.nkomarn.hydrinity.util.Constants.EMPTY_ARRAY; // Hydrinity - avoid array allocation
         }
 
         @Override
@@ -354,7 +354,7 @@ public class BlockComposter extends Block implements IInventoryHolder {
 
         @Override
         public int[] getSlotsForFace(EnumDirection enumdirection) {
-            return enumdirection == EnumDirection.DOWN ? new int[]{0} : new int[0];
+            return enumdirection == EnumDirection.DOWN ? xyz.nkomarn.hydrinity.util.Constants.ZERO_ARRAY : xyz.nkomarn.hydrinity.util.Constants.EMPTY_ARRAY; // Hydrinity - avoid array allocation
         }
 
         @Override
@@ -390,7 +390,7 @@ public class BlockComposter extends Block implements IInventoryHolder {
 
         @Override
         public int[] getSlotsForFace(EnumDirection enumdirection) {
-            return new int[0];
+            return xyz.nkomarn.hydrinity.util.Constants.EMPTY_ARRAY; // Hydrinity - avoid array allocation
         }
 
         @Override
diff --git a/src/main/java/net/minecraft/server/BlockPiston.java b/src/main/java/net/minecraft/server/BlockPiston.java
index 5d3bb5f393a1e0e4a2e8b9a466530a91279697a9..6015aa4e99e5b1d99241b5319e0fec9395c587b8 100644
--- a/src/main/java/net/minecraft/server/BlockPiston.java
+++ b/src/main/java/net/minecraft/server/BlockPiston.java
@@ -128,8 +128,10 @@ public class BlockPiston extends BlockDirectional {
 
     }
 
+    private static final EnumDirection[] DIRECTIONS = EnumDirection.values(); // Hydrinity - avoid cloning enum values
+
     private boolean a(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        EnumDirection[] aenumdirection = EnumDirection.values();
+        EnumDirection[] aenumdirection = DIRECTIONS; // Hydrinity - avoid cloning enum values
         int i = aenumdirection.length;
 
         int j;
@@ -146,7 +148,7 @@ public class BlockPiston extends BlockDirectional {
             return true;
         } else {
             BlockPosition blockposition1 = blockposition.up();
-            EnumDirection[] aenumdirection1 = EnumDirection.values();
+            EnumDirection[] aenumdirection1 = DIRECTIONS; // Hydrinity - avoid cloning enum values
 
             j = aenumdirection1.length;
 
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 0e000c7186d9f2ed6e0a1061f83d7f2d5695dc37..9ee74a39cbb624d6893045d4eed9624a616f78f8 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2570,10 +2570,12 @@ public abstract class EntityLiving extends Entity {
 
     }
 
+    private static final EnumItemSlot[] SLOTS = EnumItemSlot.values(); // Hydrinity - avoid cloning enum values
+
     @Nullable
     private Map<EnumItemSlot, ItemStack> q() {
         Map<EnumItemSlot, ItemStack> map = null;
-        EnumItemSlot[] aenumitemslot = EnumItemSlot.values();
+        EnumItemSlot[] aenumitemslot = SLOTS; // Hydrinity - avoid cloning enum values
         int i = aenumitemslot.length;
 
         for (int j = 0; j < i; ++j) {
